spring:
  application:
    name: sbb

  jpa:
    properties:
      hibernate:
        dialect: org.hibernate.dialect.H2Dialect
        format_sql: 'true'
        show_sql: 'true'
    hibernate:
      ddl-auto: update
#      naming:
#        physical-strategy: org.hibernate.boot.model.naming.PhysicalNamingStrategyStandardImpl
#    database-platform: org.hibernate.dialect.MySQL8Dialect

  mail:
    host: smtp.gmail.com
    port: '587'
    username: ${MAIL_USERNAME}
    password: ${MAIL_PASSWORD}
    properties:
      debug: 'true'
      mail:
        starttls:
          enable: 'true'
        smtp:
          auth: 'true'
          connectiontimeout: '1000'
          debug: 'true'

  datasource:
    driverClassName: org.h2.Driver
    password: ${H2_PASSWORD_DEV}
    username: ${H2_USERNAME_DEV}
    url: ${H2_URL_DEV}

  h2:
    console:
      path: /h2-console
      enabled: 'true'

#  thymeleaf:
#    prefix: file:src/main/resources/templates/
#    cache: 'false'
#    suffix: .html

  security:
    oauth2:
      client:
        registration:
          google:
            client-id: ${GOOGLE_CLIENT}
            client-secret: ${GOOGLE_SECRET}
            scope: # ?? ? openid,profile,email => profile, email ? ?? ??. openid? scope? ??? Open Id Provider? ??
              - profile
              - email

          naver:
            client-id: ${NAVER_CLIENT}
            client-secret: ${NAVER_SECRET}
            client-authentication-method: client_secret_post  # ?? ??? ??? ??? ??? ? ??? ??
            authorization-grant-type: authorization_code
            redirect-uri: "{baseUrl}/{action}/oauth2/code/{registrationId}"
            #            scope:
            #              - name
            #              - email
            #              - profile_image
            client-name: Naver

          kakao:
            client-id: ${KAKAO_CLIENT}
            client-secret: ${KAKAO_SECRET}
            client-authentication-method: client_secret_post  # ?? ??? ??? ??? ??? ? ??? ??
            authorization-grant-type: authorization_code
            scope: # https://developers.kakao.com/docs/latest/ko/kakaologin/common#user-info
              - profile_nickname
              - profile_image
              - account_email
            redirect-uri: "{baseUrl}/{action}/oauth2/code/{registrationId}"
            client-name: Kakao

        provider: # google, github, facebook? CommonOAuth2Provider? ?? ?? ?? ???? ????? kakao, naver ?? provider? ??? ??? ????? ??.
          naver:
            authorization-uri: https://nid.naver.com/oauth2.0/authorize # ?? ??? ??? ??? ? ?? ? URL . ?? ??? ??? ??? ? ?? ? URL
            token-uri: https://nid.naver.com/oauth2.0/token # ??? ??? ??? Redirect URI? ???? ?? ??? ??? ??? ???? URI
            user-info-uri: https://openapi.naver.com/v1/nid/me  # ??? ??? ???? ??? ???? ??? ??? ???? URI
            user-info-authentication-method: header # ??? ??? ??? ? ??? ??? ?? ???. header, form, query ? header ? ?? ? ???. ?? ?? ??? ??? ??? ??? ??? ?
            user-name-attribute: response # Naver ?? ? resultCode, message, response ? response ??

          kakao:
            authorization-uri: https://kauth.kakao.com/oauth/authorize # ?? ??? ??? ??? ? ?? ? URL . ?? ??? ??? ??? ? ?? ? URL
            token-uri: https://kauth.kakao.com/oauth/token  # ??? ??? ??? Redirect URI? ???? ?? ??? ??? ??? ???? URI
            user-info-uri: https://kapi.kakao.com/v2/user/me  # ??? ??? ???? ??? ???? ??? ??? ???? URI
            user-info-authentication-method: header # ??? ??? ??? ? ??? ??? ?? ???. header, form, query ? header ? ?? ? ???. ?? ?? ??? ??? ??? ??? ??? ?
            user-name-attribute: id # Kakao ?? ? id, connected_at, properties, kakao_account ? id ??


# Server
server:
  address: 127.0.0.1
  port: '8080'
#  servlet:
#    encoding:
#      force: 'true'
#      charset: UTF-8
#      enabled: 'true'
#    context-path: /toy

logging:
  level:
    org:
      hibernate:
        type:
          descriptor:
            sql: trace
